# Default values for broker
replicaCount: 2

image:
  repository: "geddes-registry.rcac.purdue.edu/cms/purdue-af-broker"
  pullPolicy: IfNotPresent
  tag: "v1.0.2"

imagePullSecrets:
  - name: docker-config
nameOverride: ""
fullnameOverride: "purdue-af-broker"

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: "public"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: purdue-af-broker.geddes.rcac.purdue.edu
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: broker-tls
      hosts:
        - purdue-af-broker.geddes.rcac.purdue.edu

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration
config:
  listenAddr: ":8080"
  sessionTTL: "24h"
  jwtSecret: "change-me-in-production"

# Authentication configuration
auth:
  oidc:
    issuer: "https://cilogon.org"
    clientSecretName: "auth-secret"  # Use actual auth-secret from cms namespace
    redirectURL: "https://purdue-af-broker.geddes.rcac.purdue.edu/auth/callback"

# JupyterHub configuration
jupyterhub:
  apiUrl: "http://hub.cms.svc.cluster.local:8081"
  apiTokenName: "broker-jupyterhub-secret"

# Kubernetes configuration
k8s:
  kubeconfigPath: ""  # Use in-cluster config if empty
